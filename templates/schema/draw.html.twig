<html>
<head>
    <title>SigmaJS example</title>
    <!-- Sigma core -->
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/sigma.core.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/conrad.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/utils/sigma.utils.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/utils/sigma.polyfills.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/sigma.settings.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/classes/sigma.classes.dispatcher.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/classes/sigma.classes.configurable.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/classes/sigma.classes.graph.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/classes/sigma.classes.camera.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/classes/sigma.classes.quad.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/classes/sigma.classes.edgequad.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/captors/sigma.captors.mouse.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/captors/sigma.captors.touch.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/sigma.renderers.canvas.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/sigma.renderers.webgl.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/sigma.renderers.svg.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/sigma.renderers.def.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.labels.def.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.hovers.def.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.nodes.def.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.edges.def.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.edges.curve.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.edges.arrow.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.edges.curvedArrow.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.edgehovers.def.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.edgehovers.curve.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.edgehovers.arrow.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.edgehovers.curvedArrow.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/renderers/canvas/sigma.canvas.extremities.def.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/middlewares/sigma.middlewares.rescale.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/middlewares/sigma.middlewares.copy.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/misc/sigma.misc.animation.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/misc/sigma.misc.bindEvents.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/misc/sigma.misc.bindDOMEvents.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/src/misc/sigma.misc.drawHovers.js"></script>
    <!-- Sigma plugins -->
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/plugins/sigma.layout.forceAtlas2/supervisor.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/plugins/sigma.layout.forceAtlas2/worker.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sigma@1.2.1/plugins/sigma.plugins.relativeSize/sigma.plugins.relativeSize.js"></script>
    <script src="/build/js/vue/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
    <style>
        html { height:100%;}
        body {height: 100%;margin:0;}
        #sigma-container { width:100%; height:100%;}
    </style>
</head>
<body>
    <div id="app">
        <div id='sigma-container'></div>
    </div>

    <script>
        window.onload = function () {
            Vue.component('v-pagination', window['vue-plain-pagination'])

            var app = new Vue({
                el: '#app',
                delimiters: ['${', '}'],
                data: {
                    edges : [],
                    nodes: [],
                    date_range : '',
                },

                watch: {
                },

                mounted (){
                    var local = window.localStorage.getItem('date_range');
                    console.log(local)
                    if (local === null){
                        window.open('/shema-commun', '_blank').focus();
                    }else {
                        tp = this
                        href = '/communication-graph/'+local
                        axios.get(href)
                            .then(function (response) {
                                console.log(response)
                                for (let i = 0 ; i < response.data.nodes.length; i++){
                                    var temp_node = {
                                        id : response.data.nodes[i],
                                        label: response.data.nodes[i],
                                        x: Math.random(),
                                        y: Math.random(),
                                        size: 1,
                                        color: "#"+ Math.floor(Math.random()*16777215).toString(16)
                                    }
                                    tp.nodes.push(temp_node)
                                }

                                for (let i = 0 ; i < response.data.edges.length; i++){
                                    var temp_edge = {
                                        id : response.data.edges[i].source +'-'+ response.data.edges[i].dest,
                                        source: response.data.edges[i].source,
                                        target: response.data.edges[i].dest,
                                        color: '#202020',
                                        type: 'curvedArrow',
                                    }
                                    tp.edges.push(temp_edge)
                                }
                                tp.draw_sigma();
                                console.log(tp.nodes)
                            })
                    }

                },

                beforeDestroy() {
                    // remove pickadate according to its API
                },

                methods : {
                    draw_sigma: function () {
                        self = this
                        console.log(this.nodes)
                        console.log(this.edges)

                        // Initialize sigma:
                        var s = new sigma(
                            {
                                renderer: {
                                    container: document.getElementById('sigma-container'),
                                    type: 'canvas'
                                },
                                settings: {
                                    minArrowSize: 10
                                }
                            }
                        );

                        var graph = {
                            nodes: self.nodes,
                            edges: self.edges
                        }
                        s.graph.read(graph);
// call the plugin
                        sigma.plugins.relativeSize(s, 1);
// draw the graph
                        s.refresh();
// launch force-atlas for 5sec
                        s.startForceAtlas2();
                        window.setTimeout(function() {s.killForceAtlas2()}, 10000);
                    }
                }
            })
        }

    </script>
</body>
</html>